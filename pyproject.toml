[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "pyflexad"
version = "0.0.3"
description = "Python Flexibility Aggregation and Disaggregation."
readme = "README.md"
requires-python = ">=3.11,<3.13"
license = { file = "LICENSE" }
keywords = [
  "energy storage systems",
  "energy flexibility aggregation",
  "minkowski sum",
  "virtual energy storage",
  "virtual power plant",
  "optimization",
]
authors = [
  { name = "Kevin Kaspar", email = "kevin.kaspar@fhv.at" },
  { name = "Emrah Öztürk", email = "emrah.oeztuerk@fhv.at" },
]
classifiers = [
  "Development Status :: 4 - Beta",
  "Intended Audience :: Science/Research",
  "Topic :: Scientific/Engineering",
  "License :: OSI Approved :: MIT License",
  "Programming Language :: Python :: 3 :: Only",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
]
# Core runtime dependencies only; optional solvers are declared in extras below.
dependencies = [
  "numpy>=1.26.4,<1.27",
  "matplotlib>=3.8.4,<3.9",
  "scipy>=1.13.0,<1.14",
  "pyomo>=6.7.1,<6.8",
  "numba>=0.59.1,<0.60",
  "seaborn>=0.13.2,<0.14",
  "networkx>=3.3,<4",
  "typing_extensions>=4.11.0,<4.12",
  "pandas>=2.2.2,<2.3",
  "pycddlib>=2.1.7,<2.2",
  "openpyxl>=3.1.5",
]

[project.optional-dependencies]
# Install with: pip install pyflexad[gurobi]
gurobi = [
  "gurobipy>=10.0.3,<12.0.3",
]
# Install with: pip install pyflexad[highs]
highs = [
  "highspy>=1.5.3",
]
# Install with: pip install pyflexad[all-solvers]
all-solvers = [
  "gurobipy>=10.0.3,<12.0.3",
  "highspy>=1.5.3",
]

[project.urls]
Homepage = "https://github.com/rce-fhv/pyflexad"
Source = "https://github.com/rce-fhv/pyflexad"

[tool.hatch.build.targets.wheel]
# Ensure src layout is correctly packaged
packages = ["src/pyflexad"]

[tool.hatch.build.targets.sdist]
# Ship only the package and essential metadata; exclude large datasets and dev assets
include = [
  "/src/pyflexad",
  "/README.md",
  "/LICENSE",
  "/pyproject.toml",
]
exclude = [
  "/data",
  "/notebooks",
  "/scripts",
  "/tests",
  "/docs",
  "/.ruff_cache",
  "/uv.lock",
  "/development_instructions.md",
  "**/*.ipynb",
]

[dependency-groups]
# Used by uv for development workflows
dev = [
  "pytest>=8.4.2",
  "pytest-cov>=7.0.0",
  "pytest-xdist>=3.8.0",
  "ruff>=0.13.3",
]

[tool.ruff]
lint.select = ["E", "F", "W"]
line-length = 120

[tool.pytest.ini_options]
testpaths = ["tests/test_pyflexad"]
pythonpath = ["src"]
# Specify the number of CPUs to run in parallel, using pytest-xdist e.g.: -n auto
# addopts = "--cov --cov-report html --cov-report term-missing --cov-fail-under 75 -n auto"
addopts = "--cov --cov-report html --cov-report term-missing --cov-fail-under 50"

[tool.coverage.run]
source = ["src"]
